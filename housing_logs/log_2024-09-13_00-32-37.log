[2024-09-13 00:32:38,083]^;INFO^;190^;configuration.py^;get_training_pipeline_config()^;Training pipeline config: TrainingPipelineConfig(artifact_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact')
[2024-09-13 00:32:38,624]^;INFO^;190^;configuration.py^;get_training_pipeline_config()^;Training pipeline config: TrainingPipelineConfig(artifact_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact')
[2024-09-13 00:32:38,624]^;INFO^;190^;configuration.py^;get_training_pipeline_config()^;Training pipeline config: TrainingPipelineConfig(artifact_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact')
[2024-09-13 00:32:38,625]^;INFO^;110^;pipeline.py^;run_pipeline()^;Pipeline starting
[2024-09-13 00:32:38,625]^;INFO^;127^;pipeline.py^;run_pipeline()^;Pipeline experiment: Experiment(experiment_id='3b196156-46e8-4963-bb9b-dbd33b6d031b', initialized_timestamp='2024-09-13-00-32-37', artifact_time_stamp='2024-09-13-00-32-37', running_status=True, start_time=datetime.datetime(2024, 9, 13, 0, 32, 38, 625560), stop_time=None, execution_time=None, message='Pipeline has been started', experiment_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\experiment\\experiment.csv', accuracy=None, is_model_accepted=None)
[2024-09-13 00:32:38,636]^;INFO^;18^;data_ingestion.py^;__init__()^;====================Data Ingestion log started.====================
[2024-09-13 00:32:38,637]^;INFO^;54^;configuration.py^;get_data_ingestion_config()^;Data ingestion config: DataIngestionConfig(data_download_url='https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz', tgz_download_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_ingestion\\2024-09-13-00-32-37\\tgz_data', raw_data_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_ingestion\\2024-09-13-00-32-37\\raw_data', ingested_train_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_ingestion\\2024-09-13-00-32-37\\ingested_data\\train', ingested_test_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_ingestion\\2024-09-13-00-32-37\\ingested_data\\test')
[2024-09-13 00:32:38,638]^;INFO^;39^;data_ingestion.py^;download_house_data()^;Downloading file from :[https://raw.githubusercontent.com/ageron/handson-ml/master/datasets/housing/housing.tgz] into :[C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\tgz_data\housing.tgz]
[2024-09-13 00:32:39,759]^;INFO^;44^;data_ingestion.py^;download_house_data()^;File: [C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\tgz_data\housing.tgz] has been downloaded successfully
[2024-09-13 00:32:39,760]^;INFO^;59^;data_ingestion.py^;extract_tgz_file()^;Extracting tgz file:[C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\tgz_data\housing.tgz] into: dir: [C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\raw_data]
[2024-09-13 00:32:39,774]^;INFO^;65^;data_ingestion.py^;extract_tgz_file()^;Extraction completed
[2024-09-13 00:32:39,774]^;INFO^;77^;data_ingestion.py^;split_the_data_as_train_test()^;Reading csv file: [C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\raw_data\housing.csv]
[2024-09-13 00:32:39,797]^;INFO^;85^;data_ingestion.py^;split_the_data_as_train_test()^;Splitting data into train and test
[2024-09-13 00:32:39,809]^;INFO^;102^;data_ingestion.py^;split_the_data_as_train_test()^;Exporting train dataset to file : [C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\ingested_data\train\housing.csv]
[2024-09-13 00:32:39,925]^;INFO^;106^;data_ingestion.py^;split_the_data_as_train_test()^;Exporting train dataset to file : [C:\Users\prash\Downloads\Housing_mlops\housing\artifact\data_ingestion\2024-09-13-00-32-37\ingested_data\test\housing.csv]
[2024-09-13 00:32:39,953]^;INFO^;111^;data_ingestion.py^;split_the_data_as_train_test()^;Data ingestion artifact: [DataIngestionArtifact(train_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_ingestion\\2024-09-13-00-32-37\\ingested_data\\train\\housing.csv', test_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_ingestion\\2024-09-13-00-32-37\\ingested_data\\test\\housing.csv', is_ingested=True, message='Data ingestion completed successfully')]
[2024-09-13 00:32:39,954]^;INFO^;132^;data_ingestion.py^;__del__()^;====================Data Ingestion log completed.==================== 


[2024-09-13 00:32:39,954]^;INFO^;38^;data_validation.py^;is_train_test_file_exists()^;checking if training and test file are available
[2024-09-13 00:32:39,954]^;INFO^;47^;data_validation.py^;is_train_test_file_exists()^;Is train and test file exists? -> True
[2024-09-13 00:32:40,788]^;INFO^;125^;data_validation.py^;initiate_data_validation()^;Data Validation artifact: DataValidationArtifact(schema_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\config\\schema.yaml', report_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_validation\\2024-09-13-00-32-37\\report.json', report_page_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_validation\\2024-09-13-00-32-37\\report.html', is_validated=True, message='Data Validation performed successfully')
[2024-09-13 00:32:40,788]^;INFO^;88^;configuration.py^;get_data_transformation_config()^;********************,Data Transformation process started ********************
[2024-09-13 00:32:40,788]^;INFO^;115^;configuration.py^;get_data_transformation_config()^;Data Transformation config process completed DataTransformationConfig(add_bedroom_per_room=True, transformed_train_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_transformation\\2024-09-13-00-32-37\\transformed_data\\train', transformed_test_dir='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_transformation\\2024-09-13-00-32-37\\transformed_data\\test', preprocessed_object_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_transformation\\2024-09-13-00-32-37\\preprocessed\\preprocessed.pkl')
[2024-09-13 00:32:40,789]^;INFO^;94^;data_transformation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Data Transformation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:40,791]^;INFO^;124^;data_transformation.py^;get_data_transformer_object()^;Numerical columns: ['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income']
[2024-09-13 00:32:40,791]^;INFO^;125^;data_transformation.py^;get_data_transformer_object()^;Categorical columns :['ocean_proximity']
[2024-09-13 00:32:40,791]^;INFO^;126^;data_transformation.py^;get_data_transformer_object()^;******************** pipeline of num anc cat created ********************
[2024-09-13 00:32:40,823]^;INFO^;150^;data_transformation.py^;initiate_data_transformation()^;splitting the input and target feature from training and testing dataframe
[2024-09-13 00:32:40,825]^;INFO^;157^;data_transformation.py^;initiate_data_transformation()^;applying preprocessing object on training and testing dataframe
[2024-09-13 00:32:40,876]^;INFO^;179^;data_transformation.py^;initiate_data_transformation()^;Saving the transformed train and test array
[2024-09-13 00:32:40,908]^;INFO^;186^;data_transformation.py^;initiate_data_transformation()^;saving the preprocessing object
[2024-09-13 00:32:40,928]^;INFO^;196^;data_transformation.py^;initiate_data_transformation()^;Data Transformation artifact :DataTransformationArtifact(transformed_train_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_transformation\\2024-09-13-00-32-37\\transformed_data\\train\\housing.npz', transformed_test_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_transformation\\2024-09-13-00-32-37\\transformed_data\\test\\housing.npz', preprocessed_object_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\data_transformation\\2024-09-13-00-32-37\\preprocessed\\preprocessed.pkl', is_validated=True, message='Data transformation success')
[2024-09-13 00:32:40,932]^;INFO^;204^;data_transformation.py^;__del__()^;====================Data Transformation log completed.==================== 


[2024-09-13 00:32:40,933]^;INFO^;125^;configuration.py^;get_model_trainer_config()^;********************,Model Trainer process started ********************
[2024-09-13 00:32:40,933]^;INFO^;146^;configuration.py^;get_model_trainer_config()^;model_trainer_config:ModelTrainerConfig(trained_model_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\model_training\\2024-09-13-00-32-37\\trained_model\\model.pkl', base_accuracy=0.6, model_config_file_path='config\\model.yaml')
[2024-09-13 00:32:40,933]^;INFO^;45^;model_trainer.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:40,934]^;INFO^;53^;model_trainer.py^;initiate_model_trainer()^;Loading transformed training dataset
[2024-09-13 00:32:40,957]^;INFO^;57^;model_trainer.py^;initiate_model_trainer()^;Loading the transformed testing dataset
[2024-09-13 00:32:40,963]^;INFO^;61^;model_trainer.py^;initiate_model_trainer()^;Splitting training and testing input and target feature
[2024-09-13 00:32:40,964]^;INFO^;64^;model_trainer.py^;initiate_model_trainer()^;Extracting the model config file path
[2024-09-13 00:32:40,965]^;INFO^;67^;model_trainer.py^;initiate_model_trainer()^;Initializing model factory class using above model config file :config\model.yaml
[2024-09-13 00:32:40,975]^;INFO^;72^;model_trainer.py^;initiate_model_trainer()^;Expected accuracy: 0.6
[2024-09-13 00:32:40,976]^;INFO^;74^;model_trainer.py^;initiate_model_trainer()^;Initiating operation model selection
[2024-09-13 00:32:40,976]^;INFO^;365^;model_factory.py^;get_best_model()^;Started Initializing model from config file
[2024-09-13 00:32:40,976]^;INFO^;207^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.linear_model' from 'c:\\Users\\prash\\Downloads\\Housing_mlops\\venv\\lib\\site-packages\\sklearn\\linear_model\\__init__.py'> import LinearRegression
[2024-09-13 00:32:40,978]^;INFO^;186^;model_factory.py^;update_property_of_class()^;Executing:$ LinearRegression().fit_intercept=True
[2024-09-13 00:32:41,094]^;INFO^;207^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.ensemble' from 'c:\\Users\\prash\\Downloads\\Housing_mlops\\venv\\lib\\site-packages\\sklearn\\ensemble\\__init__.py'> import RandomForestRegressor
[2024-09-13 00:32:41,095]^;INFO^;186^;model_factory.py^;update_property_of_class()^;Executing:$ RandomForestRegressor().n_estimators=100
[2024-09-13 00:32:41,095]^;INFO^;186^;model_factory.py^;update_property_of_class()^;Executing:$ RandomForestRegressor().min_sample_leaf=3
[2024-09-13 00:32:41,096]^;INFO^;367^;model_factory.py^;get_best_model()^;Initialized model: [InitializedModelDetail(model_serial_number='model_0', model=LinearRegression(), param_grid_search={'fit_intercept': [True, False]}, model_name='sklearn.linear_model.LinearRegression'), InitializedModelDetail(model_serial_number='model_1', model=RandomForestRegressor(), param_grid_search={'min_sample_leaf': -6}, model_name='sklearn.ensemble.RandomForestRegressor')]
[2024-09-13 00:32:41,096]^;INFO^;207^;model_factory.py^;class_for_name()^;Executing command: from <module 'sklearn.model_selection' from 'c:\\Users\\prash\\Downloads\\Housing_mlops\\venv\\lib\\site-packages\\sklearn\\model_selection\\__init__.py'> import GridSearchCV
[2024-09-13 00:32:41,096]^;INFO^;186^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).cv=5
[2024-09-13 00:32:41,097]^;INFO^;186^;model_factory.py^;update_property_of_class()^;Executing:$ GridSearchCV(cv=5, estimator=LinearRegression(),
             param_grid={'fit_intercept': [True, False]}).verbose=2
[2024-09-13 00:32:41,097]^;INFO^;240^;model_factory.py^;execute_grid_search_operation()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> f"Training LinearRegression Started." <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,241]^;INFO^;371^;model_factory.py^;get_best_model()^;Grid searched best model: [GridSearchedBestModel(model_serial_number='model_0', best_model=LinearRegression(fit_intercept=False), model=LinearRegression(), best_parameters={'fit_intercept': False}, best_score=0.6425567028055794)]
[2024-09-13 00:32:41,242]^;INFO^;353^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Accept model found:GridSearchedBestModel(model_serial_number='model_0', best_model=LinearRegression(fit_intercept=False), model=LinearRegression(), best_parameters={'fit_intercept': False}, best_score=0.6425567028055794)
[2024-09-13 00:32:41,242]^;INFO^;359^;model_factory.py^;get_best_model_from_grid_searched_best_model_list()^;Best model: GridSearchedBestModel(model_serial_number='model_0', best_model=LinearRegression(fit_intercept=False), model=LinearRegression(), best_parameters={'fit_intercept': False}, best_score=0.6425567028055794)
[2024-09-13 00:32:41,242]^;INFO^;77^;model_trainer.py^;initiate_model_trainer()^;Best model found on training dataset: GridSearchedBestModel(model_serial_number='model_0', best_model=LinearRegression(fit_intercept=False), model=LinearRegression(), best_parameters={'fit_intercept': False}, best_score=0.6425567028055794)
[2024-09-13 00:32:41,242]^;INFO^;79^;model_trainer.py^;initiate_model_trainer()^;Extracting trained model list
[2024-09-13 00:32:41,243]^;INFO^;83^;model_trainer.py^;initiate_model_trainer()^;Evaluation all trained model on training and testing dataset both
[2024-09-13 00:32:41,243]^;INFO^;67^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [LinearRegression]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,247]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<*30
[2024-09-13 00:32:41,247]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;Train Score 		 Test Score 		 Average Score
[2024-09-13 00:32:41,247]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;0.6481553634454353		 0.656459976479592 		 0.6522812381877459
[2024-09-13 00:32:41,247]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<*30
[2024-09-13 00:32:41,247]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Diff test and train accuracy: [0.008304613034156638]
[2024-09-13 00:32:41,247]^;INFO^;98^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [68627.87390018745].
[2024-09-13 00:32:41,247]^;INFO^;99^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error:[66913.4419132093].
[2024-09-13 00:32:41,248]^;INFO^;115^;model_factory.py^;evaluate_regression_model()^;Acceptable model found MetricInfoArtifact(model_name='LinearRegression(fit_intercept=False)', model_object=LinearRegression(fit_intercept=False), train_rmse=68627.87390018745, test_rmse=66913.4419132093, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459, index_number=0).
[2024-09-13 00:32:41,248]^;INFO^;86^;model_trainer.py^;initiate_model_trainer()^;Best found model on both training and testing dataset.
[2024-09-13 00:32:41,248]^;INFO^;93^;model_trainer.py^;initiate_model_trainer()^;saving model at path:C:\Users\prash\Downloads\Housing_mlops\housing\artifact\model_training\2024-09-13-00-32-37\trained_model\model.pkl
[2024-09-13 00:32:41,258]^;INFO^;105^;model_trainer.py^;initiate_model_trainer()^;Model Trainer ArtifactModelTrainerArtifact(is_trained=True, message='Model Trained successfully', trained_model_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\model_training\\2024-09-13-00-32-37\\trained_model\\model.pkl', train_rmse=68627.87390018745, test_rmse=66913.4419132093, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459)
[2024-09-13 00:32:41,258]^;INFO^;111^;model_trainer.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model trainer log completed.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< 
[2024-09-13 00:32:41,258]^;INFO^;154^;configuration.py^;get_model_evaluation_config()^;********************,Model Evaluation process started ********************
[2024-09-13 00:32:41,258]^;INFO^;163^;configuration.py^;get_model_evaluation_config()^;Model evaluation config: ModelEvaluationConfig(model_evaluation_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\model_evaluation\\model_evaluation.yaml', time_stamp='2024-09-13-00-32-37').
[2024-09-13 00:32:41,258]^;INFO^;19^;model_evaluation.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Evaluation log started.<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,296]^;INFO^;100^;model_evaluation.py^;initiate_model_evaluation()^;Converting the target columns into numpy array
[2024-09-13 00:32:41,297]^;INFO^;105^;model_evaluation.py^;initiate_model_evaluation()^;Conversion complete target column into numpy array.
[2024-09-13 00:32:41,297]^;INFO^;110^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target columns from the dataframe
[2024-09-13 00:32:41,298]^;INFO^;113^;model_evaluation.py^;initiate_model_evaluation()^;Dropping target columns from the dataframe completed
[2024-09-13 00:32:41,300]^;INFO^;67^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [HousingEstimatorModel]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,320]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<*30
[2024-09-13 00:32:41,320]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;Train Score 		 Test Score 		 Average Score
[2024-09-13 00:32:41,320]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;0.6481553634454353		 0.656459976479592 		 0.6522812381877459
[2024-09-13 00:32:41,320]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<*30
[2024-09-13 00:32:41,320]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Diff test and train accuracy: [0.008304613034156638]
[2024-09-13 00:32:41,320]^;INFO^;98^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [68627.87390018745].
[2024-09-13 00:32:41,320]^;INFO^;99^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error:[66913.4419132093].
[2024-09-13 00:32:41,320]^;INFO^;115^;model_factory.py^;evaluate_regression_model()^;Acceptable model found MetricInfoArtifact(model_name='LinearRegression()', model_object=LinearRegression(), train_rmse=68627.87390018745, test_rmse=66913.4419132093, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459, index_number=0).
[2024-09-13 00:32:41,320]^;INFO^;67^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Started evaluating model: [HousingEstimatorModel]<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,336]^;INFO^;91^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Score <<<*30
[2024-09-13 00:32:41,337]^;INFO^;92^;model_factory.py^;evaluate_regression_model()^;Train Score 		 Test Score 		 Average Score
[2024-09-13 00:32:41,337]^;INFO^;94^;model_factory.py^;evaluate_regression_model()^;0.6481553634454353		 0.656459976479592 		 0.6522812381877459
[2024-09-13 00:32:41,337]^;INFO^;96^;model_factory.py^;evaluate_regression_model()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Loss <<<*30
[2024-09-13 00:32:41,337]^;INFO^;97^;model_factory.py^;evaluate_regression_model()^;Diff test and train accuracy: [0.008304613034156638]
[2024-09-13 00:32:41,337]^;INFO^;98^;model_factory.py^;evaluate_regression_model()^;Train root mean squared error: [68627.87390018745].
[2024-09-13 00:32:41,337]^;INFO^;99^;model_factory.py^;evaluate_regression_model()^;Test root mean squared error:[66913.4419132093].
[2024-09-13 00:32:41,337]^;INFO^;115^;model_factory.py^;evaluate_regression_model()^;Acceptable model found MetricInfoArtifact(model_name='LinearRegression()', model_object=LinearRegression(), train_rmse=68627.87390018745, test_rmse=66913.4419132093, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459, index_number=0).
[2024-09-13 00:32:41,337]^;INFO^;134^;model_evaluation.py^;initiate_model_evaluation()^;Model evaluation completed Model evaluation artifact:  MetricInfoArtifact(model_name='LinearRegression()', model_object=LinearRegression(), train_rmse=68627.87390018745, test_rmse=66913.4419132093, train_accuracy=0.6481553634454353, test_accuracy=0.656459976479592, model_accuracy=0.6522812381877459, index_number=0)
[2024-09-13 00:32:41,337]^;INFO^;149^;model_evaluation.py^;initiate_model_evaluation()^;Trained model is no better than existing model hence not accepting the trained model
[2024-09-13 00:32:41,337]^;INFO^;156^;model_evaluation.py^;__del__()^;=*20 Model Evaluation log completed.==================== 
[2024-09-13 00:32:41,337]^;INFO^;176^;configuration.py^;get_model_pusher_config()^;Model Pusher config ModelPusherConfig(export_dir_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\saved_models\\20240913003241')
[2024-09-13 00:32:41,337]^;INFO^;11^;model_pusher.py^;__init__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Pusher Log Started<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,337]^;INFO^;23^;model_pusher.py^;export_model()^;Exporting model file: [C:\Users\prash\Downloads\Housing_mlops\saved_models\20240913003241\model.pkl]
[2024-09-13 00:32:41,342]^;INFO^;28^;model_pusher.py^;export_model()^;Trained model: C:\Users\prash\Downloads\Housing_mlops\housing\artifact\model_training\2024-09-13-00-32-37\trained_model\model.pkl is copied in export dir: [C:\Users\prash\Downloads\Housing_mlops\saved_models\20240913003241\model.pkl]
[2024-09-13 00:32:41,342]^;INFO^;33^;model_pusher.py^;export_model()^;Model pusher artifact :[ModelPusherArtifact(is_model_pusher=True, export_model_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\saved_models\\20240913003241\\model.pkl')]
[2024-09-13 00:32:41,342]^;INFO^;47^;model_pusher.py^;__del__()^;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Model Pusher Log Completed<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
[2024-09-13 00:32:41,342]^;INFO^;144^;pipeline.py^;run_pipeline()^;Model pusher artifact: ModelPusherArtifact(is_model_pusher=True, export_model_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\saved_models\\20240913003241\\model.pkl')
[2024-09-13 00:32:41,342]^;INFO^;147^;pipeline.py^;run_pipeline()^;Pipeline completed
[2024-09-13 00:32:41,342]^;INFO^;163^;pipeline.py^;run_pipeline()^;Pipeline experiment: Experiment(experiment_id='3b196156-46e8-4963-bb9b-dbd33b6d031b', initialized_timestamp='2024-09-13-00-32-37', artifact_time_stamp='2024-09-13-00-32-37', running_status=False, start_time=datetime.datetime(2024, 9, 13, 0, 32, 38, 625560), stop_time=datetime.datetime(2024, 9, 13, 0, 32, 41, 342098), execution_time=datetime.timedelta(seconds=2, microseconds=716538), message='Pipeline has been completed.', experiment_file_path='C:\\Users\\prash\\Downloads\\Housing_mlops\\housing\\artifact\\experiment\\experiment.csv', accuracy=0.6522812381877459, is_model_accepted=True)
